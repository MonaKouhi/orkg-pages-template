{"version":3,"sources":["assets/logo_white.svg","assets/logo.svg","Logo.js","network/networkRequests.js","components/ExampleA.js","components/ExampleB.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Image","styled","div","logo_white","logo","Logo","style","display","position","src","alt","height","Component","plainGetRequest","url","headers","submitGetRequest","Error","myHeaders","Headers","Promise","resolve","reject","fetch","method","then","response","ok","json","catch","error","status","statusText","statusCode","getComparisonById","id","a","resourceURL","resourceMetaData","statementsURL","statementsData","hasURL","hashResult","hashIdRequest","data","comparisonDataURL","comparisonData","getPaperById","ExampleA","props","getData","dataFrame","setState","requestedData","loading","renderData","authorStatements","state","content","filter","item","predicate","label","contributions","length","map","object","renderComparisonTable","width","overflow","borderTop","borderBottom","whiteSpace","textOverflow","borderRight","borderLeft","padding","properties","property","active","key","Object","keys","border","maxWidth","contributionLabel","paperId","createRows","handleClick","e","includes","window","open","rowId","dataValues","onClick","onMouseEnter","target","color","cursor","onMouseLeave","val","bind","this","className","href","icon","faSpinner","spin","ExampleB","console","log","doiStatement","doiValue","App","githubRepoURL","class","backgroundColor","size","Container","fluid","noGutters","marginLeft","marginRight","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.981ddf7b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_white.56875860.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.7d352eef.svg\";","import React, { Component } from 'react';\nimport logo_white from 'assets/logo_white.svg';\nimport logo from 'assets/logo.svg';\nimport styled from 'styled-components';\nconst Image = styled.div`\n    height: 45px;\n    width: 120px;\n    background-image: url('${logo_white}');\n    background-size: contain;\n    background-repeat: no-repeat;\n    -webkit-transition: background-image 0.2s ease-in-out;\n    transition: background-image 0.2s ease-in-out;\n    &:hover {\n        background-image: url('${logo}');\n    }\n`;\n\nexport default class Logo extends Component {\n    render() {\n        return (\n            <div style={{ display: 'inline-block', position: 'relative' }}>\n                <Image src={logo_white} alt=\"ORKG Logo\" style={{ height: 45 }} />\n            </div>\n        );\n    }\n}\n","export const plainGetRequest = (url, headers) => {\n    return submitGetRequest(url, headers);\n};\n\nexport const submitGetRequest = (url, headers, send_token = false) => {\n    if (!url) {\n        throw new Error('Cannot submit GET request. URL is null or undefined.');\n    }\n    const myHeaders = headers ? new Headers(headers) : {};\n\n    return new Promise((resolve, reject) => {\n        fetch(url, {\n            method: 'GET',\n            headers: myHeaders\n        })\n            .then(response => {\n                if (!response.ok) {\n                    reject({\n                        error: new Error(`Error response. (${response.status}) ${response.statusText}`),\n                        statusCode: response.status,\n                        statusText: response.statusText\n                    });\n                } else {\n                    const json = response.json();\n                    if (json.then) {\n                        json.then(resolve).catch(reject);\n                    } else {\n                        return resolve(json);\n                    }\n                }\n            })\n            .catch(reject);\n    });\n};\n\nexport const getComparisonById = async id => {\n    const resourceURL = `https://www.orkg.org/orkg/api/resources/${id}/`;\n    const resourceMetaData = await plainGetRequest(resourceURL);\n\n    const statementsURL = `https://www.orkg.org/orkg/api/statements/subject/${id}/`;\n    const statementsData = await plainGetRequest(statementsURL);\n\n    // get the comparison data\n    const hasURL = `https://www.orkg.org/orkg/simcomp/visualization/?resourceId=${id}`;\n    const hashResult = await plainGetRequest(hasURL);\n    const hashIdRequest = hashResult.data.url;\n\n    const comparisonDataURL = `https://www.orkg.org/orkg/simcomp/compare/${hashIdRequest}`;\n    const comparisonData = await plainGetRequest(comparisonDataURL);\n\n    return {\n        resourceMetaData,\n        statementsData,\n        comparisonData\n    };\n};\n\nexport const getPaperById = async id => {\n    const resourceURL = `https://www.orkg.org/orkg/api/resources/${id}/`;\n    const resourceMetaData = await plainGetRequest(resourceURL);\n\n    const statementsURL = `https://www.orkg.org/orkg/api/statements/subject/${id}/`;\n    const statementsData = await plainGetRequest(statementsURL);\n    return {\n        resourceMetaData,\n        statementsData\n    };\n};\n","import React, { Component } from 'react';\n\nimport './visWidgetConfig.css';\n\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome';\n\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\nimport { getComparisonById } from 'network/networkRequests';\n\n \n\nclass ExampleA extends Component {\n\n    constructor(props) {\n\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n\n        this.state = {\n\n            loading: true,\n\n            requestedData: null,\n\n        };\n\n    }\n\n \n\n    componentDidMount() {\n\n        // fetch data\n\n        this.getData();\n\n    }\n\n \n\n    getData = () => {\n\n        getComparisonById('R44930').then(dataFrame => {\n\n            this.setState({ requestedData: dataFrame, loading: false });\n\n        });\n\n    };\n\n \n\n    renderData = () => {\n\n        // create an authors array;\n\n        const authorStatements = this.state.requestedData.statementsData.content.filter(item => item.predicate.id === 'P27');\n\n \n\n        if (!this.state.requestedData) {\n\n            return <div>Some error</div>;\n\n        } else {\n\n            return (\n\n                <div>\n\n                    <div>\n\n                        Title: <b>{this.state.requestedData.resourceMetaData.label}</b>; Number of contributions:{' '}\n\n                        <b>{this.state.requestedData.comparisonData.contributions.length}</b>\n\n                    </div>\n\n                    <div>\n\n                        Authors:{' '}\n\n                        {authorStatements.map(item => {\n\n                            return item.object.label + '; ';\n\n                        })}\n\n                    </div>\n\n                    <div>Comparison Data:</div>\n\n                    {this.renderComparisonTable()}\n\n                </div>\n\n            );\n\n        }\n\n    };\n\n \n\n    renderComparisonTable = () => {\n\n        const dataFrame = this.state.requestedData.comparisonData;\n\n        return (\n\n            <table style={{ width: '100%', overflow: 'auto', display: 'block' }}>\n\n                {/*  define headers*/}\n\n                <thead style={{ borderTop: '1px solid black', borderBottom: '1px solid black' }}>\n\n                    <tr>\n\n                        <th\n\n                            style={{\n\n                                whiteSpace: 'nowrap',\n\n                                overflow: 'hidden',\n\n                                textOverflow: 'ellipsis',\n\n                                borderRight: '1px solid black',\n\n                                borderLeft: '1px solid black',\n\n                                padding: '3px'\n\n                            }}\n\n                        >\n\n                            Contribution\n\n                        </th>\n\n                        {dataFrame.properties\n\n                            .filter(property => property.active === true)\n\n                            .map(property => {\n\n                                return (\n\n                                    <th\n\n                                        key={property.label}\n\n                                        style={{\n\n                                            whiteSpace: 'nowrap',\n\n                                            overflow: 'hidden',\n\n                                            textOverflow: 'ellipsis',\n\n                                            borderRight: '1px solid black',\n\n                                            padding: '3px'\n\n                                        }}\n\n                                    >\n\n                                        {property.label}\n\n                                    </th>\n\n                                );\n\n                            })}\n\n                    </tr>\n\n                </thead>\n\n                <tbody>\n\n                    {Object.keys(dataFrame.data).map((data, id) => {\n\n                        return (\n\n                            <tr key={'tr_id' + id} style={{ border: '1px solid black', borderTop: 'none' }}>\n\n                                <td\n\n                                    key={'td_id_' + id}\n\n                                    style={{\n\n                                        whiteSpace: 'nowrap',\n\n                                        overflow: 'hidden',\n\n                                        textOverflow: 'ellipsis',\n\n                                        borderRight: '1px solid black',\n\n                                        borderLeft: '1px solid black',\n\n                                        padding: '3px',\n\n                                        maxWidth: '200px'\n\n                                    }}\n\n                                >\n\n                                    {dataFrame.contributions[id].contributionLabel +\n\n                                        '(' +\n\n                                        dataFrame.contributions[id].id +\n\n                                        '/' +\n\n                                        dataFrame.contributions[id].paperId +\n\n                                        ')'}\n\n                                </td>\n\n                                {this.createRows(id)}\n\n                            </tr>\n\n                        );\n\n                    })}\n\n                </tbody>\n\n            </table>\n\n        );\n\n    };\n\n \n\n    handleClick = (e) => {\n\n        if (e[0].label.includes(\"http\")) {\n\n        window.open(e[0].label, \"_blank\") }\n\n    } \n\n    createRows = rowId => {\n\n        // property filtering\n\n        const dataFrame = this.state.requestedData.comparisonData;\n\n        const activeProperties = dataFrame.properties.filter(property => property.active === true);\n\n        return activeProperties.map(property => {\n            const dataValues = dataFrame.data[property.id][rowId];\n\n            function changeColor(e) {\n\n                if (dataValues[0].label.includes(\"http\")){\n\n                e.target.style.color = 'blue';\n\n                e.target.style.cursor = 'pointer';\n\n                }\n\n              }\n\n              function changeColor2(e) {\n\n                e.target.style.color = 'black';\n\n              }\n \n\n            return (\n\n                <td\n\n                    key={'td_id' + rowId + '_' + property.id}\n\n                    style={{\n\n                        whiteSpace: 'nowrap',\n\n                        overflow: 'hidden',\n\n                        textOverflow: 'ellipsis',\n\n                        borderRight: '1px solid black',\n\n                        padding: '3px',\n\n                        maxWidth: '200px',\n\n                    }}\n\n                    onClick = {() => this.handleClick(dataValues)}\n\n                    onMouseEnter={changeColor}\n\n                    onMouseLeave={changeColor2}\n\n                >\n\n                    {dataValues.map(val => {\n\n                        return val.label + ' ';\n\n                    })}\n\n                </td>\n\n            );\n\n        });\n\n    };\n\n \n\n    /** Component Rendering Function **/\n\n    render() {\n\n        return (\n\n            <div>\n\n                <div className={'headerStyle'}>\n\n                    Example A: Comparisons{' '}\n\n                    <a style={{ color: '#e86161' }} href=\"https://www.orkg.org/orkg/comparison/R44930\">\n\n                        COVID-19 Reproductive Number Estimates\n\n                    </a>\n\n                </div>\n\n                <div className={'bodyStyle'}>\n\n                    {this.state.loading && (\n\n                        <h2 className=\"h5\">\n\n                            <span>\n\n                                <Icon icon={faSpinner} spin />\n\n                            </span>{' '}\n\n                            Loading ...\n\n                        </h2>\n\n                    )}\n\n                    {!this.state.loading && this.renderData()}\n\n                </div>\n\n            </div>\n\n        );\n\n    }\n\n}\n\n \n\nexport default ExampleA;","import React, { Component } from 'react';\nimport './visWidgetConfig.css';\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { getPaperById } from '../network/networkRequests';\n\nclass ExampleB extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true\n        };\n    }\n\n    componentDidMount() {\n        // fetch data\n        this.getData();\n    }\n\n    getData = () => {\n        getPaperById('R8186').then(dataFrame => {\n            this.setState({ requestedData: dataFrame, loading: false });\n        });\n    };\n\n    handleClick = (e) => {\n        console.log(e)\n        window.open(\"https://dx.doi.org/\" + e, \"_blank\")\n    }\n\n    renderData = () => {\n        // create an authors array;\n        const authorStatements = this.state.requestedData.statementsData.content.filter(item => item.predicate.id === 'P27');\n        const doiStatement = this.state.requestedData.statementsData.content.filter(item => item.predicate.id === 'P26');\n\n        function changeColor(e) {\n\n            e.target.style.color = 'blue';\n\n            e.target.style.cursor = 'pointer';\n\n          }\n\n          function changeColor2(e) {\n\n            e.target.style.color = 'black';\n\n          }\n\n        let doiValue = '';\n        if (doiStatement[0] && doiStatement[0].object) {\n            doiValue = doiStatement[0].object.label;\n        }\n        if (!this.state.requestedData) {\n            return <div>Some error</div>;\n        } else {\n            return (\n                <div>\n                    <div>\n                        Title: <b>{this.state.requestedData.resourceMetaData.label}</b>;\n                    </div>\n                    <div>\n                        Authors:{' '}\n                        {authorStatements.map(item => {\n                            return item.object.label + '; ';\n                        })}\n                    </div>\n                    <div>Paper Data:</div>\n                    <div>Paper doi: <p onClick={() => this.handleClick(doiValue)} onMouseEnter={changeColor} onMouseLeave={changeColor2} style={{display: \"inline\"}}>{doiValue}</p></div>\n                </div>\n            );\n        }\n    };\n\n    /** Component Rendering Function **/\n    render() {\n        return (\n            <div>\n                <div className={'headerStyle'}>\n                    Example B: Paper{' '}\n                    <a style={{ color: '#e86161' }} href=\"https://www.orkg.org/orkg/paper/R8186\">\n                        Open Research Knowledge Graph: Next Generation Infrastructure for Semantic Scholarly Knowledge\n                    </a>\n                </div>\n                <div className={'bodyStyle'}>\n                    {this.state.loading && (\n                        <h2 className=\"h5\">\n                            <span>\n                                <Icon icon={faSpinner} spin />\n                            </span>{' '}\n                            Loading ...\n                        </h2>\n                    )}\n                    {!this.state.loading && this.renderData()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ExampleB;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Tippy from '@tippyjs/react';\nimport 'tippy.js/dist/tippy.css';\nimport { FaGithub, FaGitlab } from 'react-icons/fa';\nimport Logo from './Logo';\nimport { Container } from 'reactstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ExampleA from 'components/ExampleA';\nimport ExampleB from 'components/ExampleB';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.githubRepoURL = 'https://github.com/MonaKouhi/orkg-pages-template';\n    }\n\n    render() {\n        return (\n            <>\n                <header>\n                    <div class=\"navbar shadow-sm\" style={{ backgroundColor: '#5f6474' }}>\n                        <div class=\"d-flex justify-content-between\">\n                            <a href=\"https://www.orkg.org/orkg/\">\n                                <Logo />\n                            </a>\n                        </div>\n\n                        <div>\n                            <Tippy content=\"Link to original template project\">\n                                <span className=\"mr-2\">\n                                    <a href=\"https://gitlab.com/TIBHannover/orkg/github-pages-template\">\n                                        <FaGitlab size={35} color=\"#e24329\" />\n                                    </a>\n                                </span>\n                            </Tippy>\n                            <Tippy content=\"Link to GitHub project\">\n                                <span className=\"mr-2\">\n                                    <a href={this.githubRepoURL}>\n                                        <FaGithub size={35} color=\"#000\" />\n                                    </a>\n                                </span>\n                            </Tippy>\n                        </div>\n                    </div>\n                </header>\n                <Container fluid noGutters>\n                    <Container\n                        style={{\n                            backgroundColor: '#9c9c9c',\n                            marginLeft: '10%',\n                            marginRight: '10%',\n                            maxWidth: '80%',\n                            height: 'calc(100vh - 40px)',\n                            overflow: 'auto'\n                        }}\n                    >\n                        <ExampleA />\n                        <ExampleB />\n                    </Container>\n                </Container>\n            </>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}